#loading data to be used
jail.load <- read.csv(file="9-18_Jail_Census.csv", header = TRUE, sep = ",")
#recoding race and gender to be more descriptive
jail.load <- mutate(Race = recode(Race, "B" = "Black",
"A" = "Asian",
"H" = "Hispanic",
"W" = "White",
"I" = "American Indian",
"U" = "Unknown"),
Gender = recode(Gender, "M" = "Male", "F" = "Female"))
#loading libraries used
library(flexdashboard)
library(shiny)
library(reshape2)
library(dplyr)
library(plotly)
#loading data to be used
jail.load <- read.csv(file="9-18_Jail_Census.csv", header = TRUE, sep = ",")
#recoding race and gender to be more descriptive
jail.load <- mutate(jail.load$Race = recode(Race, "B" = "Black",
#loading libraries used
library(flexdashboard)
library(shiny)
library(reshape2)
library(dplyr)
library(plotly)
#loading data to be used
jail.dirty <- read.csv(file="9-18_Jail_Census.csv", header = TRUE, sep = ",")
#recoding race and gender to be more descriptive
jail.load <- jail.dirty %>% mutate(Race = recode(Race, "B" = "Black",
"A" = "Asian",
"H" = "Hispanic",
"W" = "White",
"I" = "American Indian",
"U" = "Unknown"),
Gender = recode(Gender, "M" = "Male", "F" = "Female"))
pdf(NULL)
View(jail.load)
View(jail.load)
#plot 1
renderPlotly({
ggplot(data = jaInput, aes(x = Age.at.Booking, fill = Race)) + geom_bar(stat = "identity")
})
#loading libraries used
library(flexdashboard)
library(shiny)
library(reshape2)
library(dplyr)
library(plotly)
#loading data to be used
jail.dirty <- read.csv(file="August_Jail_Census.csv", header = TRUE, sep = ",")
pdf(NULL)
#recoding race and gender to be more descriptive
jail.load <- jail.dirty %>% mutate(Race = recode(Race, "B" = "Black",
"A" = "Asian",
"H" = "Hispanic",
"W" = "White",
"I" = "American Indian",
"U" = "Unknown"),
Gender = recode(Gender, "M" = "Male", "F" = "Female"))
jaInput <- reactive({
jail <- jail.load %>%
# Age Filter
filter(Current.Age >= input$AgeSelect[1] & Current.Age <= input$AgeSelect[2])  %>%
# Date Filter
filter(Date >= input$DateSelect[1] & Date <= input$DateSelect[2])  %>%
# Booking Age Filter
filter(Age.at.Booking >= input$BookingAgeSelect[1] & Age.at.Booking <= input$BookingAgeSelect[2])
# Race Filter
if (length(input$RaceSelect) > 0 ) {
jail <- subset(jail, Race %in% input$RaceSelect)
}
return(jail)
})
#plot 1
renderPlotly({
dat <- jaInput()
ggplotly(
ggplot(data = dat, aes(x = Age.at.Booking, y = count(X_id), fill = Race, text = paste0("<br>Race: ", Race,
"<br>Age at Booking: ", Age.at.Booking,
"<br>Current Age: ", Current.Age))) +
geom_bar(stat = "identity")+
labs(x = "Age.at.Booking", y = "Number", title = "graph 1") +
guides(color = FALSE)
, tooltip = "text")
})
#plot 1
renderPlotly({
dat <- jaInput()
ggplotly(
ggplot(data = dat, aes(x = Age.at.Booking, y = X_id, fill = Race, text = paste0("<br>Race: ", Race,
"<br>Age at Booking: ", Age.at.Booking,
"<br>Current Age: ", Current.Age))) +
geom_bar(stat = "identity")+
labs(x = "Age.at.Booking", y = "Number", title = "graph 1") +
guides(color = FALSE)
, tooltip = "text")
})
View(jail.load)
count(jail.load$Gender == "Male")
jail.load$Gender == "Male"
sum(jail.load$Gender == "Male")
length(jail.load$Gender)
#loading libraries used
library(flexdashboard)
library(shiny)
library(reshape2)
library(dplyr)
library(plotly)
#loading data to be used
jail.dirty <- read.csv(file="August_Jail_Census.csv", header = TRUE, sep = ",")
pdf(NULL)
#recoding race and gender to be more descriptive
jail.load <- jail.dirty %>% mutate(Race = recode(Race, "B" = "Black",
"A" = "Asian",
"H" = "Hispanic",
"W" = "White",
"I" = "American Indian",
"U" = "Unknown",
"x" = NULL),
Gender = recode(Gender, "M" = "Male", "F" = "Female"))
jaInput <- reactive({
jail <- jail.load %>%
filter(
# Age Filter
(Current.Age >= input$AgeSelect[1] & Current.Age <= input$AgeSelect[2]) &
# Date Filter
(Date >= input$DateSelect[1] & Date <= input$DateSelect[2])  &
# Booking Age Filter
(Age.at.Booking >= input$BookingAgeSelect[1] & Age.at.Booking <= input$BookingAgeSelect[2]))
# Race Filter
if (length(input$RaceSelect) > 0 ) {
jail <- subset(jail, Race %in% input$RaceSelect)
}
return(jail)
})
View(jail.load)
#loading libraries used
library(flexdashboard)
library(shiny)
library(reshape2)
library(dplyr)
library(plotly)
#loading data to be used
jail.dirty <- read.csv(file="August_Jail_Census.csv", header = TRUE, sep = ",")
pdf(NULL)
#recoding race and gender to be more descriptive
jail.load <- jail.dirty %>% mutate(Race = recode(Race, "B" = "Black",
"A" = "Asian",
"H" = "Hispanic",
"W" = "White",
"I" = "American Indian",
"U" = "Unknown",
"x" = NULL),
Gender = recode(Gender, "M" = "Male", "F" = "Female"))
jaInput <- reactive({
# Age Filter
jail1 <- jail.load %>% filter(Current.Age >= input$AgeSelect[1] & Current.Age <= input$AgeSelect[2]) &
# Date Filter
jail2 <-  jail1 %>% filter(Date >= input$DateSelect[1] & Date <= input$DateSelect[2])  &
# Booking Age Filter
jail <- jail2 %>% filter(Age.at.Booking >= input$BookingAgeSelect[1] & Age.at.Booking <= input$BookingAgeSelect[2])
# Race Filter
if (length(input$RaceSelect) > 0 ) {
jail <- subset(jail, Race %in% input$RaceSelect)
}
return(jail)
})
summary(jail.load)
#loading libraries used
library(flexdashboard)
library(shiny)
library(reshape2)
library(dplyr)
library(plotly)
#loading data to be used
jail.dirty <- read.csv(file="August_Jail_Census.csv", header = TRUE, sep = ",")
pdf(NULL)
#recoding race and gender to be more descriptive
jail.load <- jail.dirty %>% mutate(Race = recode(Race, "B" = "Black",
"A" = "Asian",
"H" = "Hispanic",
"W" = "White",
"I" = "American Indian",
"U" = "Unknown",
"x" = NULL,
"" = NULL),
Gender = recode(Gender, "M" = "Male", "F" = "Female"))
jaInput <- reactive({
# Age Filter
jail1 <- jail.load %>% filter(Current.Age >= input$AgeSelect[1] & Current.Age <= input$AgeSelect[2]) &
# Date Filter
jail2 <-  jail1 %>% filter(Date >= input$DateSelect[1] & Date <= input$DateSelect[2])  &
# Booking Age Filter
jail <- jail2 %>% filter(Age.at.Booking >= input$BookingAgeSelect[1] & Age.at.Booking <= input$BookingAgeSelect[2])
# Race Filter
if (length(input$RaceSelect) > 0 ) {
jail <- subset(jail, Race %in% input$RaceSelect)
}
return(jail)
})
summary(jail.load)
jail.load$Race
#loading libraries used
library(flexdashboard)
library(shiny)
library(reshape2)
library(dplyr)
library(plotly)
#loading data to be used
jail.dirty <- read.csv(file="August_Jail_Census.csv", header = TRUE, sep = ",", na.strings = "")
pdf(NULL)
#recoding race and gender to be more descriptive
jail.load <- jail.dirty %>% mutate(Race = recode(Race, "B" = "Black",
"A" = "Asian",
"H" = "Hispanic",
"W" = "White",
"I" = "American Indian",
"U" = "Unknown",
"x" = NULL),
Gender = recode(Gender, "M" = "Male", "F" = "Female"))
jaInput <- reactive({
# Age Filter
jail1 <- jail.load %>% filter(Current.Age >= input$AgeSelect[1] & Current.Age <= input$AgeSelect[2]) &
# Date Filter
jail2 <-  jail1 %>% filter(Date >= input$DateSelect[1] & Date <= input$DateSelect[2])  &
# Booking Age Filter
jail <- jail2 %>% filter(Age.at.Booking >= input$BookingAgeSelect[1] & Age.at.Booking <= input$BookingAgeSelect[2])
# Race Filter
if (length(input$RaceSelect) > 0 ) {
jail <- subset(jail, Race %in% input$RaceSelect)
}
return(jail)
})
summary(jail.load)
#loading libraries used
library(flexdashboard)
library(shiny)
library(reshape2)
library(dplyr)
library(plotly)
#loading data to be used
jail.dirty <- read.csv(file="August_Jail_Census.csv", header = TRUE, sep = ",", na.strings = "")
pdf(NULL)
#recoding race and gender to be more descriptive
jail.load <- jail.dirty %>% mutate(Race = recode(Race, "B" = "Black",
"A" = "Asian",
"H" = "Hispanic",
"W" = "White",
"I" = "American Indian",
"U" = "Unknown",
"x" = NULL),
Gender = recode(Gender, "M" = "Male", "F" = "Female"))
jaInput <- reactive({
# Age Filter
jail <- jail.load %>% filter(Current.Age >= input$AgeSelect[1] & Current.Age <= input$AgeSelect[2]) &
# Date Filter
jail2 <-  jail %>% filter(Date >= input$DateSelect[1] & Date <= input$DateSelect[2])  &
# Booking Age Filter
jail3 <- jail2 %>% filter(Age.at.Booking >= input$BookingAgeSelect[1] & Age.at.Booking <= input$BookingAgeSelect[2])
# Race Filter
if (length(input$RaceSelect) > 0 ) {
jail <- subset(jail, Race %in% input$RaceSelect)
}
return(jail)
})
jaInput()
summary(jail.laod)
summary(jail.load)
sum(jail.load$Race == "Black")
sum(jail.load$Race == "White")
sum(jail.load$Race == "W")
(sum(jail.load$Gender == "Male"))
(sum(jail.load$Race == "Asian"))
length(jail.load$Race == "White")
length(jail.load$Race == "Black")
sum(jail.load$Race == "Black")
(jail.load$Race == "Black")
jail.load$Gender == "Male")
jail.load$Gender == "Male"
jail.load$Race == "Black"
jail.load$Race == "Black"
sum(as.factor(jail.load$Race == "Black"))
sum(jail.load$Race == "Black")
View(jail.load)
type(jail.load)
summary(jail.load)
#recoding race and gender to be more descriptive
jail.load <- jail.dirty %>% mutate(Race = recode(Race, "B" = "Black",
"A" = "Asian",
"H" = "Hispanic",
"W" = "White",
"I" = "American Indian",
"U" = "Unknown",
"x" = NULL),
Gender = recode(Gender, "M" = "Male", "F" = "Female"),
X_id = as.factor(X_id))
summmary(jail.load)
summary(jail.load)
sum(jail.load$Race == "Black")
typeof(jail.load$Race)
typeof(jail.load$Gender)
(jail.load$Race)
(jail.load$Race == "Black")
count(jail.load$Race == "Black")
sum(jail.load$Race == "Black")
tally(jail.load$Race == "Black")
sum(jail.load$Race == "Black", na.rm = TRUE)
summary(jail.load)
22670/36003
#loading libraries used
library(flexdashboard)
library(shiny)
library(reshape2)
library(dplyr)
library(plotly)
#loading data to be used
jail.dirty <- read.csv(file="August_Jail_Census.csv", header = TRUE, sep = ",", na.strings = "")
pdf(NULL)
#recoding race and gender to be more descriptive
jail.load <- jail.dirty %>% mutate(Race = recode(Race, "B" = "Black",
"A" = "Asian",
"H" = "Hispanic",
"W" = "White",
"I" = "American Indian",
"U" = "Unknown",
"x" = NULL),
Gender = recode(Gender, "M" = "Male", "F" = "Female"),
X_id = as.factor(X_id))
jaInput <- reactive({
# Age Filter
jail <- jail.load %>%
filter(Current.Age >= input$AgeSelect[1] & Current.Age <= input$AgeSelect[2]) &
# Date Filter
#  jail2 <-  jail %>% filter(Date >= input$DateSelect[1] & Date <= input$DateSelect[2])  &
#    # Booking Age Filter
#  jail3 <- jail2 %>% filter(Age.at.Booking >= input$BookingAgeSelect[1] & Age.at.Booking <= input$BookingAgeSelect[2])
#  # Race Filter
if (length(input$RaceSelect) > 0 ) {
jail <- subset(jail, Race %in% input$RaceSelect)
}
return(jail)
})
#loading libraries used
library(flexdashboard)
library(shiny)
library(reshape2)
library(dplyr)
library(plotly)
#loading data to be used
jail.dirty <- read.csv(file="August_Jail_Census.csv", header = TRUE, sep = ",", na.strings = "")
pdf(NULL)
#recoding race and gender to be more descriptive
jail.load <- jail.dirty %>% mutate(Race = recode(Race, "B" = "Black",
"A" = "Asian",
"H" = "Hispanic",
"W" = "White",
"I" = "American Indian",
"U" = "Unknown",
"x" = NULL),
Gender = recode(Gender, "M" = "Male", "F" = "Female"),
X_id = as.factor(X_id))
jaInput <- reactive({
# Age Filter
jail <- jail.load %>%
filter(Current.Age >= input$AgeSelect[1] & Current.Age <= input$AgeSelect[2])
#Date Filter
#jail2 <-  jail %>% filter(Date >= input$DateSelect[1] & Date <= input$DateSelect[2])
# Booking Age Filter
#jail3 <- jail2 %>% filter(Age.at.Booking >= input$BookingAgeSelect[1] & Age.at.Booking <= input$BookingAgeSelect[2])
# Race Filter
if (length(input$RaceSelect) > 0 ) {
jail <- subset(jail, Race %in% input$RaceSelect)
}
return(jail)
})
runApp('C:/Users/BadMix/Desktop/CMU Classes/Fall 18/R Shiny/Class_6-Dashboards/Dashboard Example - FINAL')
#loading libraries used
library(flexdashboard)
library(shiny)
library(reshape2)
library(dplyr)
library(plotly)
#loading data to be used
jail.dirty <- read.csv(file="August_Jail_Census.csv", header = TRUE, sep = ",", na.strings = "")
pdf(NULL)
#recoding race and gender to be more descriptive
jail.load <- jail.dirty %>% mutate(Race = recode(Race, "B" = "Black",
"A" = "Asian",
"H" = "Hispanic",
"W" = "White",
"I" = "American Indian",
"U" = "Unknown",
"x" = NULL),
Gender = recode(Gender, "M" = "Male", "F" = "Female"),
X_id = as.factor(X_id))
jaInput <- reactive({
# Age Filter
jail <- jail.load %>%
filter(Current.Age >= input$AgeSelect[1] & Current.Age <= input$AgeSelect[2]) &
# Date Filter
#  jail2 <-  jail %>% filter(Date >= input$DateSelect[1] & Date <= input$DateSelect[2])  &
#    # Booking Age Filter
#  jail3 <- jail2 %>% filter(Age.at.Booking >= input$BookingAgeSelect[1] & Age.at.Booking <= input$BookingAgeSelect[2])
#  # Race Filter
if (length(input$RaceSelect) > 0 ) {
jail <- subset(jail, Race %in% input$RaceSelect)
}
return(jail)
})
summary(jail.load$Date)
summary(jail.load)
runApp('C:/Users/BadMix/Desktop/CMU Classes/Fall 18/R Shiny/Class_3-ggplot-plotly/Class_4-Inputs/Inputs')
summary(jail.load$Date)
summary(jail.load$Date <= "2018-08-07")
sum(jail.load$Date <= "2018-08-07")
(jail.load$Date <= "2018-08-07")
typeof(jail.load)
typeof(jail.load$Date)
#loading libraries used
library(flexdashboard)
library(shiny)
library(reshape2)
library(dplyr)
library(plotly)
#loading data to be used
jail.dirty <- read.csv(file="August_Jail_Census.csv", header = TRUE, sep = ",", na.strings = "")
pdf(NULL)
#recoding race and gender to be more descriptive
jail.load <- jail.dirty %>% mutate(Race = recode(Race, "B" = "Black",
"A" = "Asian",
"H" = "Hispanic",
"W" = "White",
"I" = "American Indian",
"U" = "Unknown",
"x" = NULL),
Gender = recode(Gender, "M" = "Male", "F" = "Female"),
Date = as.Date(Date),
X_id = as.factor(X_id))
jaInput <- reactive({
# Age Filter
#jail <- jail.load %>%
#  filter(Current.Age >= input$AgeSelect[1] & Current.Age <= input$AgeSelect[2])
#Date Filter
jail <- jail.load %>%
filter(Date >= input$DateSelect[1] & Date <= input$DateSelect[2])
# Booking Age Filter
#jail2 <- jail %>%
#  filter(Age.at.Booking >= input$BookingAgeSelect[1] & Age.at.Booking <= input$BookingAgeSelect[2])
# Race Filter
#if (length(input$RaceSelect) > 0 ) {
#  jail <- subset(jail, Race %in% input$RaceSelect)
#}
#if (length(input$DateSelect) > 0 ) {
#  jail2 <- subset(jail2, jail2$Date >= input$DateSelect[1], jail2$Date <= input$DateSelect[2])
#}
return(jail)
})
#plot 2
renderPlotly({
dat <- jaInput()
ggplot(data = dat, aes(x = Age.at.Booking,  fill = Gender)) +
geom_area(stat = "bin")+
labs(x = "Age at Booking", title = "Age at Booking per Gender") +
guides(color = FALSE)
})
#plot 2
renderPlotly({
dat <- jaInput()
ggplot(data = dat, aes(x = Age.at.Booking,  fill = Gender)) +
geom_area(stat = "bin", position = "fill")+
labs(x = "Age at Booking", title = "Age at Booking per Gender") +
guides(color = FALSE)
})
#loading libraries used
library(flexdashboard)
library(shiny)
library(reshape2)
library(dplyr)
library(plotly)
#loading data to be used
jail.dirty <- read.csv(file="August_Jail_Census.csv", header = TRUE, sep = ",", na.strings = "")
pdf(NULL)
#recoding race and gender to be more descriptive
jail.load <- jail.dirty %>% mutate(Race = factor(recode(Race, "B" = "Black",
"W" = "White",
"H" = "Hispanic",
"A" = "Asian",
"I" = "American Indian",
"U" = "Unknown",
"x" = NULL), levels = c("Black", "White", "Hispanic")),
Gender = recode(Gender, "M" = "Male", "F" = "Female"),
Date = as.Date(Date),
X_id = as.factor(X_id))
jaInput <- reactive({
# Age Filter
jail <- jail.load %>%
filter(Current.Age >= input$AgeSelect[1] & Current.Age <= input$AgeSelect[2])
#Date Filter
jail2 <- jail %>%
filter(Date >= input$DateSelect[1] & Date <= input$DateSelect[2])
# Booking Age Filter
jail3 <- jail2 %>%
filter(Age.at.Booking >= input$BookingAgeSelect[1] & Age.at.Booking <= input$BookingAgeSelect[2])
# Race Filter
if (length(input$RaceSelect) > 0 ) {
jail3 <- subset(jail3, Race %in% input$RaceSelect)
}
return(jail3)
})
runApp('C:/Users/BadMix/Desktop/CMU Classes/Fall 18/R Shiny/Class_6-Dashboards/Dashboard Example - FINAL')
runApp('C:/Users/BadMix/Desktop/CMU Classes/Fall 18/R Shiny/Class_6-Dashboards/Dashboard Example - FINAL')
